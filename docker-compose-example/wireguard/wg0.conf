[Interface]
Address = Correct address
PrivateKey = Correct private key
# DNS Server is not needed in Wireguard because the
# sniproxy will resolve the DNS queries itself

# Setup according to this doc from linuxserver.io
# https://docs.linuxserver.io/images/docker-wireguard#maintaining-local-access-to-attached-services
# This is needed to respond to local clients accessing the sniproxy server
PostUp = iptables -I OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT

# Allow tailscale traffic
PostUp = DROUTE=$(ip route | grep default | awk '{print $3}'); ip route add 100.64.0.0/10 via $DROUTE
PostUp = iptables -I OUTPUT -d 100.64.0.0/10 -j ACCEPT

# Allow docker compose network traffic
# This subnet has the be changed according to your local setup
PostUp = iptables -I OUTPUT -d 172.19.0.0/16 -j ACCEPT


PreDown = iptables -D OUTPUT -d 172.19.0.0/16 -j ACCEPT

PreDown = iptables -D OUTPUT -d 100.64.0.0/10 -j ACCEPT
PreDown = DROUTE=$(ip route | grep default | awk '{print $3}'); ip route del 100.64.0.0/10 via $DROUTE

PreDown = iptables -D OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT

# Setup up your peer according to your config
[Peer]
